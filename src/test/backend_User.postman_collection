{
	"info": {
		"_postman_id": "50056031-7ca2-4800-a4ec-360230d40f55",
		"name": "backend admin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25872762"
	},
	"item": [
		{
			"name": "addRider (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"AddGame succes post\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"followOriginalHttpMethod": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Henk 2\",\r\n    \"lastname\" : \"Janssen\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/apiUser/addRider",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"apiUser",
						"addRider"
					]
				},
				"description": "Hierbij probeer ik een Game aan te maken met alleen een naam maar dit lukt niet"
			},
			"response": []
		},
		{
			"name": "GetAllGames (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GetAllGame succes get\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/apiUser/games",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"apiUser",
						"games"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetEnrollmentsByUserId (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function (){",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/apiUser/enrollments/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"apiUser",
						"enrollments",
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddEnrollment (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"AddEnrollment succes post\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"game\":{\r\n                \"id\":1,\r\n                \"name\" : \"Game_2\",\r\n                \"description\" : \"TestGame 2\",\r\n                \"date\" : \"2055-09-09\",\r\n                \"location\" : \"testlocation 2\"\r\n            },\r\n    \"rider\":{\r\n                \"id\":1,\r\n                \"firstname\":\"rider_2\",\r\n                \"lastname\":\"horse\"\r\n            }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/apiUser/addEnrollment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"apiUser",
						"addEnrollment"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateEnrollment (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UpdateEnrollments succes put\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 100\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":1,\r\n    \"game\":{\r\n                \"id\":1,\r\n                \"name\" : \"Game_2\",\r\n                \"description\" : \"TestGame 2\",\r\n                \"date\" : \"2040-09-09\",\r\n                \"location\" : \"testlocation 2\"\r\n            },\r\n    \"rider\":{\r\n                \"id\":1,\r\n                \"firstname\":\"rider_2\",\r\n                \"lastname\":\"horse updateee\"\r\n            }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/apiUser/updateEnrollment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"apiUser",
						"updateEnrollment"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteEnrollment (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response time is less than 100\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/apiUser/deleteEnrollment/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"apiUser",
						"deleteEnrollment",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "getRiderById (backend User)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/apiUser/rider/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"apiUser",
						"rider",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetRiderByName (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GetRider succes get\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The rider has all properties\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.be.a('number');\r",
							"    pm.expect(responseJson.firstname).to.be.a('string');\r",
							"    pm.expect(responseJson.lastname).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 100\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:9090/api/riderName/rider",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"riderName",
						"rider"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateRider (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"UpdateRider succes put\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The rider has to return a boolean\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.a('boolean');\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 100\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\":\"1\",\r\n    \"firstname\":\"rider_1\",\r\n    \"lastname\":\"horse UPDATE\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:9090/api/updateRider",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"updateRider"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteRider (backend User)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:9090/api/deleteRider/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"deleteRider",
						"1"
					]
				}
			},
			"response": []
		}
	]
}